# Generated by Django 4.2.2 on 2023-07-06 06:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="creation datetime"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, help_text="updated datetime"),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        editable=False,
                        help_text="Unique UUID of the registered user",
                        unique=True,
                    ),
                ),
                (
                    "user_id",
                    models.PositiveIntegerField(
                        help_text="User ID of the registered user", unique=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email of the registered user",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username of the registered user",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("nonactive", "Non-active"),
                            ("suspended", "Suspended"),
                        ],
                        default="nonactive",
                        help_text="status of the account",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "account_accounts",
            },
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="creation datetime"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, help_text="updated datetime"),
                ),
                (
                    "user_id",
                    models.PositiveIntegerField(
                        help_text="ID of the associated user (source: account.user_id)"
                    ),
                ),
                (
                    "currency_id",
                    models.PositiveIntegerField(
                        help_text="Related blockchain that will be used"
                    ),
                ),
                (
                    "currency_name",
                    models.CharField(
                        blank=True,
                        help_text="Related currency name used",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "currency_symbol",
                    models.CharField(
                        blank=True,
                        help_text="Related currency symbol used",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "currency_blockchain",
                    models.CharField(
                        blank=True,
                        help_text="Related currency blockchain used",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "currency_std",
                    models.CharField(
                        blank=True,
                        help_text="Related currency blockchain standard used",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        help_text="String address of the blockchain wallet",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Label of the wallet", max_length=255, unique=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("nonactive", "Non-active"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        help_text="status of the wallet",
                        max_length=20,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        help_text="Related account object",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallets",
                        to="account.account",
                    ),
                ),
            ],
            options={
                "db_table": "account_wallets",
            },
        ),
    ]
